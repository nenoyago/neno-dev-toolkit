{
    "pipes": [],
    "interfaces": [
        {
            "name": "IconBaseComponentProps",
            "id": "interface-IconBaseComponentProps-6aec9e27c0878236ee53f414f1556eef3bbefd8927a5773e36fb6ab09eb0c9ed4c99829448d737884ac4b9f4defdf42c1a6bf42f252594a99b586390d20e39cc",
            "file": "projects/design-system/components/src/icon/icon.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport { Component, input, InputSignal } from '@angular/core';\n\nimport { IconName as NgIconName, NgIcon } from '@ng-icons/core';\n\ntype HeroIconName = Extract<\n  Exclude<\n    NgIconName,\n    `hero${string}Solid` | `hero${string}Mini` | `hero${string}Micro`\n  >,\n  `hero${string}`\n>;\n\ntype LucideIconName = Extract<NgIconName, `lucide${string}`>;\n\ntype IconName = HeroIconName | LucideIconName;\n\nexport type IconInput = IconName | (string & {});\n\ninterface IconBaseComponentProps {\n  name: InputSignal<IconInput>;\n  size: InputSignal<string>;\n  class?: InputSignal<string>;\n  ngClass?: InputSignal<string | string[] | Record<string, boolean>>;\n  style?: InputSignal<Record<string, string>>;\n}\n\n@Component({\n  standalone: true,\n  template: ''\n})\nabstract class IconBaseComponent implements IconBaseComponentProps {\n  readonly name = input.required<IconInput>();\n  readonly size = input('', {\n    transform: (value: string) => {\n      if (value === '') return value; // Allow empty string\n      const sizeNum = Number(value);\n      if (isNaN(sizeNum) || sizeNum <= 0) {\n        throw new Error(\n          `Invalid size value: ${value}. Must be a positive number.`\n        );\n      }\n      return value;\n    }\n  });\n  readonly strokeWidth = input<string | number, number>('2', {\n    transform: (value: string | number) => {\n      if (typeof value === 'string') {\n        const num = parseFloat(value);\n        if (isNaN(num)) {\n          throw new Error(\n            `Invalid strokeWidth value: ${value}. Must be a valid number.`\n          );\n        }\n        return num;\n      }\n      return value;\n    }\n  });\n  readonly class = input<string>('');\n  readonly ngClass = input<string | string[] | Record<string, boolean>>('');\n  readonly style = input<Record<string, string>>({});\n}\n@Component({\n  selector: 'liv-icon',\n  imports: [NgIcon, NgClass],\n  templateUrl: './icon.component.html',\n  styleUrl: './icon.component.css',\n  host: {\n    class: 'contents'\n  }\n})\nexport class IconComponent extends IconBaseComponent {}\n",
            "properties": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<IconInput>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "ngClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string | [] | Record>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "style",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputSignal<Record<string, string>>",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "InputProps",
            "id": "interface-InputProps-2657e7d94df0dff625bd9ba2cf5ee4e908b01014aa59400777260289f0f1e6acaab27751cdc4967d264ac0711f9dcc8343da33a3cf94929ec15138ec26a2382a",
            "file": "projects/design-system/components/src/input/base/base-input.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Self,\n  booleanAttribute,\n  computed,\n  effect,\n  input,\n  linkedSignal,\n  output,\n  signal,\n  viewChild\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NgControl\n} from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport {\n  INPUT_CLASSES,\n  LEADING_SPAN_CLASSES,\n  TRAILING_SPAN_CLASSES,\n  WRAPPER_CLASSES\n} from './input-constants';\n\nexport function sanitizeForDataAttr(value: string): string {\n  return value\n    .normalize('NFKD')\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/_/g, '-')\n    .replace(/--+/g, '-')\n    .replace(/-$/g, '');\n}\n\nexport interface InputProps {\n  name: string;\n  placeholder?: string;\n  disabled: boolean;\n  readonly?: boolean;\n}\n\n@Component({\n  standalone: true,\n  template: ''\n})\nexport class BaseInput implements ControlValueAccessor, OnInit, OnDestroy {\n  readonly disabled = input(false, { transform: booleanAttribute });\n  readonly name = input('');\n  readonly componentId = input('', {\n    alias: 'id'\n  });\n\n  readonly placeholder = input('');\n  readonly size = input<'sm' | 'md' | 'lg'>('md');\n  readonly shape = input<'square' | 'rounded' | 'pill'>('rounded');\n  readonly readonly = input(false, { transform: booleanAttribute });\n\n  readonly maxlength = input<number | undefined>(undefined);\n  readonly autocomplete = input('off');\n  readonly autocapitalize = input<'words' | 'characters' | 'on' | 'off'>('off');\n\n  readonly inputRef = viewChild<ElementRef<HTMLInputElement>>('inputRef');\n\n  readonly dynamicClasses = computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  });\n\n  protected get inputClasses(): string {\n    return INPUT_CLASSES;\n  }\n\n  protected get leadingSpanClasses(): string {\n    return LEADING_SPAN_CLASSES;\n  }\n  protected get trailingSpanClasses(): string {\n    return TRAILING_SPAN_CLASSES;\n  }\n  protected readonly wrapperClasses = WRAPPER_CLASSES;\n\n  private readonly _props = signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  });\n  protected readonly value = signal<string>('');\n  private readonly formDisabled = signal<boolean>(false);\n\n  private readonly _isInvalid = signal<boolean>(false);\n  private readonly _isValid = signal<boolean>(false);\n  private readonly _isRequired = signal<boolean>(false);\n\n  readonly id = linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  });\n\n  private statusChangesSubscription: Subscription | null = null;\n\n  readonly props = this._props.asReadonly();\n  readonly isInvalid = this._isInvalid.asReadonly();\n  readonly isValid = this._isValid.asReadonly();\n  readonly isRequired = this._isRequired.asReadonly();\n\n  protected readonly blur = output<FocusEvent>();\n  protected readonly focus = output<FocusEvent>();\n\n  constructor(@Self() @Optional() public readonly control: NgControl) {\n    if (this.control) {\n      this.control.valueAccessor = this;\n    }\n    this.setupDisabledEffect();\n    this.setupPropsEffect();\n    this.setupValueEffect();\n    this.setupInputEffect();\n  }\n\n  private setupDisabledEffect(): void {\n    effect(() => {\n      const inputDisabled = this.disabled();\n      const formDisabled = this.formDisabled();\n      const isMergedDisabled = inputDisabled || formDisabled;\n\n      this._props.update((current) => ({\n        ...current,\n        disabled: isMergedDisabled\n      }));\n    });\n  }\n\n  private setupPropsEffect(): void {\n    effect(() => {\n      this._props.update((current) => ({\n        ...current,\n        name: this.name(),\n        placeholder: this.placeholder(),\n        size: this.size(),\n        shape: this.shape(),\n        readonly: this.readonly()\n      }));\n    });\n  }\n\n  private setupValueEffect(): void {\n    effect(() => {\n      const currentValue = this.value();\n      if (currentValue !== undefined) {\n        this.onChangeCb(currentValue);\n        if (currentValue !== null && currentValue !== '') {\n          this.onTouchedCb(currentValue);\n        }\n      }\n    });\n  }\n  private setupInputEffect(): void {\n    effect(() => {\n      const nativeElement = this.inputRef()?.nativeElement;\n      if (nativeElement) {\n        nativeElement.id = this.id();\n        nativeElement.name = this.name();\n        nativeElement.type = this.getType();\n        nativeElement.placeholder = this.placeholder();\n        nativeElement.readOnly = !!this.props().readonly;\n        nativeElement.disabled = this.props().disabled;\n      }\n    });\n  }\n\n  protected getType(): string {\n    return 'text';\n  }\n\n  ngOnInit(): void {\n    this.setupControlObservables();\n    this.updateControlState();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupStatusChangesSubscription();\n  }\n\n  private setupControlObservables(): void {\n    if (this.control?.statusChanges) {\n      this.cleanupStatusChangesSubscription();\n      this.statusChangesSubscription = this.control.statusChanges.subscribe(\n        () => {\n          this.updateControlState();\n        }\n      );\n    }\n  }\n\n  private cleanupStatusChangesSubscription(): void {\n    this.statusChangesSubscription?.unsubscribe();\n    this.statusChangesSubscription = null;\n  }\n\n  private updateControlState(): void {\n    if (!this.control) {\n      return;\n    }\n\n    const isRequired = this.checkIfRequired();\n    this._isRequired.set(isRequired);\n    this._props.update((current) => ({\n      ...current,\n      showRequired: isRequired\n    }));\n\n    const { touched, invalid, valid } = this.control;\n    const shouldShowError = touched && invalid;\n\n    this._isInvalid.set(Boolean(shouldShowError));\n    this._isValid.set(Boolean(touched && valid));\n  }\n\n  private checkIfRequired(): boolean {\n    if (!this.control?.control?.validator) {\n      return false;\n    }\n    const validator = this.control.control.validator({} as AbstractControl);\n    return !!(validator && validator['required']);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.focus.emit(event);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.onTouchedCb(this.value());\n    this.blur.emit(event);\n  }\n\n  setProps(props: Partial<InputProps>): void {\n    this._props.update((currentProps) => ({\n      ...currentProps,\n      ...props\n    }));\n  }\n\n  writeValue(value: string): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: (_: string) => void): void {\n    this.onChangeCb = fn;\n  }\n\n  registerOnTouched(fn: (_: string) => void): void {\n    this.onTouchedCb = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.formDisabled.set(isDisabled);\n  }\n\n  protected onChangeCb: (_: string) => void = () => {};\n  protected onTouchedCb: (_: string) => void = () => {};\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "indexKey": "",
                    "optional": true,
                    "description": "",
                    "line": 49
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "BaseInput",
            "id": "component-BaseInput-2657e7d94df0dff625bd9ba2cf5ee4e908b01014aa59400777260289f0f1e6acaab27751cdc4967d264ac0711f9dcc8343da33a3cf94929ec15138ec26a2382a",
            "file": "projects/design-system/components/src/input/base/base-input.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocapitalize",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"words\" | \"characters\" | \"on\" | \"off\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "componentId",
                    "defaultValue": "'', {    alias: 'id'  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "maxlength",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "readonly",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "shape",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"square\" | \"rounded\" | \"pill\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [
                {
                    "name": "blur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false
                },
                {
                    "name": "focus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isInvalid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isRequired",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isValid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_props",
                    "defaultValue": "signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        171,
                        171,
                        125,
                        148
                    ]
                },
                {
                    "name": "dynamicClasses",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "formDisabled",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "inputRef",
                    "defaultValue": "viewChild<ElementRef<HTMLInputElement>>('inputRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "this._isInvalid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isRequired",
                    "defaultValue": "this._isRequired.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isValid",
                    "defaultValue": "this._isValid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "onChangeCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 295,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "onTouchedCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "props",
                    "defaultValue": "this._props.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "statusChangesSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "value",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "wrapperClasses",
                    "defaultValue": "WRAPPER_CLASSES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkIfRequired",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cleanupStatusChangesSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ]
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setProps",
                    "args": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setupControlObservables",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setupDisabledEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setupInputEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setupPropsEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "setupValueEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updateControlState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Self,\n  booleanAttribute,\n  computed,\n  effect,\n  input,\n  linkedSignal,\n  output,\n  signal,\n  viewChild\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NgControl\n} from '@angular/forms';\n\nimport { Subscription } from 'rxjs';\n\nimport {\n  INPUT_CLASSES,\n  LEADING_SPAN_CLASSES,\n  TRAILING_SPAN_CLASSES,\n  WRAPPER_CLASSES\n} from './input-constants';\n\nexport function sanitizeForDataAttr(value: string): string {\n  return value\n    .normalize('NFKD')\n    .toLowerCase()\n    .trim()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/_/g, '-')\n    .replace(/--+/g, '-')\n    .replace(/-$/g, '');\n}\n\nexport interface InputProps {\n  name: string;\n  placeholder?: string;\n  disabled: boolean;\n  readonly?: boolean;\n}\n\n@Component({\n  standalone: true,\n  template: ''\n})\nexport class BaseInput implements ControlValueAccessor, OnInit, OnDestroy {\n  readonly disabled = input(false, { transform: booleanAttribute });\n  readonly name = input('');\n  readonly componentId = input('', {\n    alias: 'id'\n  });\n\n  readonly placeholder = input('');\n  readonly size = input<'sm' | 'md' | 'lg'>('md');\n  readonly shape = input<'square' | 'rounded' | 'pill'>('rounded');\n  readonly readonly = input(false, { transform: booleanAttribute });\n\n  readonly maxlength = input<number | undefined>(undefined);\n  readonly autocomplete = input('off');\n  readonly autocapitalize = input<'words' | 'characters' | 'on' | 'off'>('off');\n\n  readonly inputRef = viewChild<ElementRef<HTMLInputElement>>('inputRef');\n\n  readonly dynamicClasses = computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  });\n\n  protected get inputClasses(): string {\n    return INPUT_CLASSES;\n  }\n\n  protected get leadingSpanClasses(): string {\n    return LEADING_SPAN_CLASSES;\n  }\n  protected get trailingSpanClasses(): string {\n    return TRAILING_SPAN_CLASSES;\n  }\n  protected readonly wrapperClasses = WRAPPER_CLASSES;\n\n  private readonly _props = signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  });\n  protected readonly value = signal<string>('');\n  private readonly formDisabled = signal<boolean>(false);\n\n  private readonly _isInvalid = signal<boolean>(false);\n  private readonly _isValid = signal<boolean>(false);\n  private readonly _isRequired = signal<boolean>(false);\n\n  readonly id = linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  });\n\n  private statusChangesSubscription: Subscription | null = null;\n\n  readonly props = this._props.asReadonly();\n  readonly isInvalid = this._isInvalid.asReadonly();\n  readonly isValid = this._isValid.asReadonly();\n  readonly isRequired = this._isRequired.asReadonly();\n\n  protected readonly blur = output<FocusEvent>();\n  protected readonly focus = output<FocusEvent>();\n\n  constructor(@Self() @Optional() public readonly control: NgControl) {\n    if (this.control) {\n      this.control.valueAccessor = this;\n    }\n    this.setupDisabledEffect();\n    this.setupPropsEffect();\n    this.setupValueEffect();\n    this.setupInputEffect();\n  }\n\n  private setupDisabledEffect(): void {\n    effect(() => {\n      const inputDisabled = this.disabled();\n      const formDisabled = this.formDisabled();\n      const isMergedDisabled = inputDisabled || formDisabled;\n\n      this._props.update((current) => ({\n        ...current,\n        disabled: isMergedDisabled\n      }));\n    });\n  }\n\n  private setupPropsEffect(): void {\n    effect(() => {\n      this._props.update((current) => ({\n        ...current,\n        name: this.name(),\n        placeholder: this.placeholder(),\n        size: this.size(),\n        shape: this.shape(),\n        readonly: this.readonly()\n      }));\n    });\n  }\n\n  private setupValueEffect(): void {\n    effect(() => {\n      const currentValue = this.value();\n      if (currentValue !== undefined) {\n        this.onChangeCb(currentValue);\n        if (currentValue !== null && currentValue !== '') {\n          this.onTouchedCb(currentValue);\n        }\n      }\n    });\n  }\n  private setupInputEffect(): void {\n    effect(() => {\n      const nativeElement = this.inputRef()?.nativeElement;\n      if (nativeElement) {\n        nativeElement.id = this.id();\n        nativeElement.name = this.name();\n        nativeElement.type = this.getType();\n        nativeElement.placeholder = this.placeholder();\n        nativeElement.readOnly = !!this.props().readonly;\n        nativeElement.disabled = this.props().disabled;\n      }\n    });\n  }\n\n  protected getType(): string {\n    return 'text';\n  }\n\n  ngOnInit(): void {\n    this.setupControlObservables();\n    this.updateControlState();\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupStatusChangesSubscription();\n  }\n\n  private setupControlObservables(): void {\n    if (this.control?.statusChanges) {\n      this.cleanupStatusChangesSubscription();\n      this.statusChangesSubscription = this.control.statusChanges.subscribe(\n        () => {\n          this.updateControlState();\n        }\n      );\n    }\n  }\n\n  private cleanupStatusChangesSubscription(): void {\n    this.statusChangesSubscription?.unsubscribe();\n    this.statusChangesSubscription = null;\n  }\n\n  private updateControlState(): void {\n    if (!this.control) {\n      return;\n    }\n\n    const isRequired = this.checkIfRequired();\n    this._isRequired.set(isRequired);\n    this._props.update((current) => ({\n      ...current,\n      showRequired: isRequired\n    }));\n\n    const { touched, invalid, valid } = this.control;\n    const shouldShowError = touched && invalid;\n\n    this._isInvalid.set(Boolean(shouldShowError));\n    this._isValid.set(Boolean(touched && valid));\n  }\n\n  private checkIfRequired(): boolean {\n    if (!this.control?.control?.validator) {\n      return false;\n    }\n    const validator = this.control.control.validator({} as AbstractControl);\n    return !!(validator && validator['required']);\n  }\n\n  handleFocus(event: FocusEvent): void {\n    this.focus.emit(event);\n  }\n\n  handleBlur(event: FocusEvent): void {\n    this.onTouchedCb(this.value());\n    this.blur.emit(event);\n  }\n\n  setProps(props: Partial<InputProps>): void {\n    this._props.update((currentProps) => ({\n      ...currentProps,\n      ...props\n    }));\n  }\n\n  writeValue(value: string): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: (_: string) => void): void {\n    this.onChangeCb = fn;\n  }\n\n  registerOnTouched(fn: (_: string) => void): void {\n    this.onTouchedCb = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.formDisabled.set(isDisabled);\n  }\n\n  protected onChangeCb: (_: string) => void = () => {};\n  protected onTouchedCb: (_: string) => void = () => {};\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 144,
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "ControlValueAccessor",
                "OnInit",
                "OnDestroy"
            ],
            "accessors": {
                "inputClasses": {
                    "name": "inputClasses",
                    "getSignature": {
                        "name": "inputClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 103
                    }
                },
                "leadingSpanClasses": {
                    "name": "leadingSpanClasses",
                    "getSignature": {
                        "name": "leadingSpanClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 107
                    }
                },
                "trailingSpanClasses": {
                    "name": "trailingSpanClasses",
                    "getSignature": {
                        "name": "trailingSpanClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 110
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-be5e9457f483a7be06a51b79961380e25cda72569730e0996e31ad427d500c95d5b0612b23bb7f85f8e02619b026926cfd4f19e4dd9c2117719a1ebfbcdddf99",
            "file": "projects/design-system/components/src/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[liv-button]",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [
                {
                    "name": "NgpButton",
                    "inputs": [
                        "disabled"
                    ],
                    "outputs": []
                }
            ],
            "inputsClass": [
                {
                    "name": "intent",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonIntent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "shape",
                    "defaultValue": "'pill'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonShape",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonSize",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "variant",
                    "defaultValue": "'filled'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ButtonVariant",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, input } from '@angular/core';\n\nimport { NgpButton } from 'ng-primitives/button';\n\nexport type ButtonSize = 'sm' | 'md' | 'lg' | 'xl';\nexport type ButtonVariant = 'filled' | 'outline' | 'ghost' | 'link';\nexport type ButtonShape = 'square' | 'rounded' | 'pill';\nexport type ButtonIntent = 'primary' | 'secondary' | 'tertiary' | 'destructive';\n\n@Component({\n  // eslint-disable-next-line @angular-eslint/component-selector\n  selector: 'button[liv-button]',\n  hostDirectives: [{ directive: NgpButton, inputs: ['disabled'] }],\n  styleUrl: './button.component.css',\n  templateUrl: './button.component.html',\n  host: {\n    '[attr.data-size]': 'size()',\n    '[attr.data-variant]': 'variant()',\n    '[attr.data-intent]': 'intent()',\n    '[attr.data-shape]': 'shape()'\n  }\n})\nexport class ButtonComponent {\n  readonly size = input<ButtonSize>('md');\n  readonly variant = input<ButtonVariant>('filled');\n  readonly intent = input<ButtonIntent>('primary');\n  readonly shape = input<ButtonShape>('pill');\n}\n",
            "styleUrl": "./button.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content select=\"[slot=leading]\" />\n<ng-content />\n<ng-content select=\"[slot=trailing]\" />\n"
        },
        {
            "name": "CountInputComponent",
            "id": "component-CountInputComponent-29dd859beb4be6dac0e1a1fa88204c144c419a9a1a391ca17399624d08f4448f7a7299e47091dc68ac9c7d9c5a0b6ff61791b814c5f5c9da319303855699b20e",
            "file": "projects/design-system/components/src/input/count/count-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "provideIcons({\n    heroMinusSmall, heroPlusSmall\n})"
                },
                {
                    "name": "CountInputComponent",
                    "type": "component"
                }
            ],
            "selector": "liv-count-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./count-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "min",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "step",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "autocapitalize",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"words\" | \"characters\" | \"on\" | \"off\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "componentId",
                    "defaultValue": "'', {    alias: 'id'  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "maxlength",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "shape",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"square\" | \"rounded\" | \"pill\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "blur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "focus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "canDecrement",
                    "defaultValue": "computed(() => this.getNumericValue() > this.min())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "canIncrement",
                    "defaultValue": "computed(() => this.getNumericValue() < this.max())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "_isInvalid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isRequired",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isValid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_props",
                    "defaultValue": "signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        171,
                        171,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "dynamicClasses",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "formDisabled",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "inputRef",
                    "defaultValue": "viewChild<ElementRef<HTMLInputElement>>('inputRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "this._isInvalid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isRequired",
                    "defaultValue": "this._isRequired.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isValid",
                    "defaultValue": "this._isValid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onChangeCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 295,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onTouchedCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "props",
                    "defaultValue": "this._props.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "statusChangesSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "wrapperClasses",
                    "defaultValue": "WRAPPER_CLASSES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "decrement",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getNumericValue",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "increment",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkIfRequired",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "cleanupStatusChangesSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setProps",
                    "args": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupControlObservables",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupDisabledEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupInputEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupPropsEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupValueEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "updateControlState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "INPUT_IMPORTS"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Optional, Self, computed, input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { provideIcons } from '@ng-icons/core';\nimport { heroMinusSmall, heroPlusSmall } from '@ng-icons/heroicons/outline';\n\nimport { IconComponent } from '../../icon';\nimport { BaseInput } from '../base/base-input';\nimport { INPUT_CLASSES, INPUT_IMPORTS } from '../base/input-constants';\nimport { LIV_INPUT_COMPONENT_TOKEN } from '../base/input-tokens';\n\n@Component({\n  selector: 'liv-count-input',\n  imports: [...INPUT_IMPORTS, IconComponent],\n  providers: [\n    provideIcons({\n      heroMinusSmall,\n      heroPlusSmall\n    }),\n    {\n      provide: LIV_INPUT_COMPONENT_TOKEN,\n      useExisting: CountInputComponent\n    }\n  ],\n  templateUrl: './count-input.component.html',\n  styleUrl: './count-input.component.css'\n})\nexport class CountInputComponent extends BaseInput {\n  readonly min = input<number>(1);\n  readonly max = input<number>(100);\n  readonly step = input<number>(1);\n\n  readonly canDecrement = computed(() => this.getNumericValue() > this.min());\n  readonly canIncrement = computed(() => this.getNumericValue() < this.max());\n\n  protected override get inputClasses(): string {\n    return `${INPUT_CLASSES} text-center`;\n  }\n\n  constructor(@Self() @Optional() control: NgControl) {\n    super(control);\n  }\n\n  increment(): void {\n    const currentValue = this.getNumericValue();\n    if (currentValue < this.max()) {\n      const newValue = Math.min(currentValue + this.step(), this.max());\n      this.value.set(newValue.toString());\n    }\n  }\n\n  decrement(): void {\n    const currentValue = this.getNumericValue();\n    if (currentValue > this.min()) {\n      const newValue = Math.max(currentValue - this.step(), this.min());\n      this.value.set(newValue.toString());\n    }\n  }\n\n  protected onInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const numericValue = target.value.replace(/\\D/g, '');\n    const value = numericValue ? parseInt(numericValue, 10) : this.min();\n\n    if (!isNaN(value)) {\n      const clampedValue = Math.max(this.min(), Math.min(this.max(), value));\n      target.value = clampedValue.toString();\n      this.value.set(clampedValue.toString());\n    } else {\n      target.value = this.min().toString();\n      this.value.set(this.min().toString());\n    }\n  }\n\n  private getNumericValue(): number {\n    const value = this.value();\n    if (typeof value === 'number') return value;\n    if (typeof value === 'string') {\n      const parsed = parseFloat(value);\n      return isNaN(parsed) ? this.min() : parsed;\n    }\n    return this.min();\n  }\n}\n",
            "styleUrl": "./count-input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "BaseInput"
            ],
            "accessors": {
                "inputClasses": {
                    "name": "inputClasses",
                    "getSignature": {
                        "name": "inputClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 36
                    }
                }
            },
            "templateData": "<div\n  [class]=\"wrapperClasses\"\n  [attr.data-size]=\"size()\"\n  [attr.data-invalid]=\"isInvalid()\"\n>\n  @let iconSize = size() === 'sm' ? '12' : '16';\n\n  <span [class]=\"leadingSpanClasses\" data-slot=\"leading\">\n    <button\n      type=\"button\"\n      class=\"flex group-data-[size='sm']/wrapper:size-4 size-5 items-center justify-center rounded border border-neutral-300 bg-white text-neutral-600 transition-all duration-150 hover:bg-neutral-50 hover:text-neutral-700 hover:border-neutral-400 focus:outline-none focus-visible:ring-2 focus-visible:ring-main-primary-500 focus-visible:ring-offset-1 active:bg-neutral-100 enabled:active:scale-90 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-white disabled:hover:text-neutral-600 disabled:hover:border-neutral-300 cursor-pointer leading-0\"\n      [disabled]=\"props().disabled || props().readonly || !canDecrement()\"\n      (click)=\"decrement()\"\n      aria-label=\"Decrement\"\n    >\n      <liv-icon name=\"lucideMinus\" [size]=\"iconSize\" />\n    </button>\n  </span>\n  <input\n    #inputRef\n    ngpInput\n    [class]=\"inputClasses\"\n    [ngClass]=\"dynamicClasses()\"\n    type=\"number\"\n    [attr.id]=\"id()\"\n    [name]=\"name()\"\n    [(ngModel)]=\"value\"\n    [placeholder]=\"placeholder()\"\n    [disabled]=\"props().disabled\"\n    [readOnly]=\"props().readonly\"\n    [autocomplete]=\"autocomplete()\"\n    [autocapitalize]=\"autocapitalize()\"\n    (focus)=\"handleFocus($event)\"\n    (blur)=\"handleBlur($event)\"\n    [attr.maxlength]=\"maxlength()\"\n    [attr.aria-invalid]=\"isInvalid()\"\n    [attr.aria-describedby]=\"id() + '-error'\"\n  />\n  <span [class]=\"trailingSpanClasses\" data-slot=\"trailing\">\n    <button\n      type=\"button\"\n      class=\"flex group-data-[size='sm']/wrapper:size-4 size-5 items-center justify-center rounded border border-neutral-300 bg-white text-neutral-600 transition-all duration-150 hover:bg-neutral-50 hover:text-neutral-700 hover:border-neutral-400 focus:outline-none focus-visible:ring-2 focus-visible:ring-main-primary-500 focus-visible:ring-offset-1 active:bg-neutral-100 enabled:active:scale-90 disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:bg-white disabled:hover:text-neutral-600 disabled:hover:border-neutral-300 cursor-pointer leading-0\"\n      [disabled]=\"props().disabled || props().readonly || !canIncrement()\"\n      (click)=\"increment()\"\n      aria-label=\"Increment\"\n    >\n      <liv-icon name=\"lucidePlus\" [size]=\"iconSize\" />\n    </button>\n  </span>\n</div>\n"
        },
        {
            "name": "CurrencyInputComponent",
            "id": "component-CurrencyInputComponent-4ee1f3fdd56e87bdc99d1ec66505f15f0d9af6adb9e44087bbc823849951c4d1dc227d5004be391bcf0c3f0e2c0d3b10986ea6cccf47dfaa5dc10d43338dba53",
            "file": "projects/design-system/components/src/input/currency/currency-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "CurrencyInputComponent",
                    "type": "component"
                }
            ],
            "selector": "liv-currency-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./currency-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "align",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"left\" | \"right\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "allowNegative",
                    "defaultValue": "false, {    transform: booleanAttribute  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "allowZero",
                    "defaultValue": "false, {    transform: booleanAttribute  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "currencyCode",
                    "defaultValue": "'BRL'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SupportedCurrency",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "decimal",
                    "defaultValue": "','",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "precision",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showPrefix",
                    "defaultValue": "true, {    transform: booleanAttribute  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "showSuffix",
                    "defaultValue": "false, {    transform: booleanAttribute  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "thousands",
                    "defaultValue": "'.'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "autocapitalize",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"words\" | \"characters\" | \"on\" | \"off\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "componentId",
                    "defaultValue": "'', {    alias: 'id'  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "maxlength",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "shape",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"square\" | \"rounded\" | \"pill\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "blur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "focus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "currencyMaskOptions",
                    "defaultValue": "computed(() => {\n    const { code, symbol } = this.getCurrency();\n\n    return {\n      align: this.align(),\n      allowNegative: this.allowNegative(),\n      allowZero: this.allowZero(),\n      decimal: this.decimal(),\n      precision: this.precision(),\n      prefix: this.showPrefix() ? `${symbol} ` : '',\n      suffix: this.showSuffix() ? ` ${code}` : '',\n      thousands: this.thousands(),\n      nullable: false,\n      min: null,\n      max: null,\n      inputMode: NgxCurrencyInputMode.Financial\n    };\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 67,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "_isInvalid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isRequired",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isValid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_props",
                    "defaultValue": "signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        171,
                        171,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "dynamicClasses",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "formDisabled",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "inputRef",
                    "defaultValue": "viewChild<ElementRef<HTMLInputElement>>('inputRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "this._isInvalid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isRequired",
                    "defaultValue": "this._isRequired.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isValid",
                    "defaultValue": "this._isValid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onChangeCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 295,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onTouchedCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "props",
                    "defaultValue": "this._props.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "statusChangesSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "wrapperClasses",
                    "defaultValue": "WRAPPER_CLASSES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getCurrency",
                    "args": [],
                    "optional": false,
                    "returnType": "{ code: any; symbol: any; }",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "checkIfRequired",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "cleanupStatusChangesSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setProps",
                    "args": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupControlObservables",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupDisabledEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupInputEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupPropsEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupValueEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "updateControlState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "INPUT_IMPORTS"
                },
                {
                    "name": "NgxCurrencyDirective",
                    "type": "directive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  Component,\n  Optional,\n  Self,\n  input,\n  computed,\n  booleanAttribute\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { NgxCurrencyDirective, NgxCurrencyInputMode } from 'ngx-currency';\n\nimport { BaseInput } from '../base/base-input';\nimport { INPUT_IMPORTS } from '../base/input-constants';\nimport { LIV_INPUT_COMPONENT_TOKEN } from '../base/input-tokens';\n\nexport const SUPPORTED_CURRENCIES = [\n  { country: 'Brazil', code: 'BRL', symbol: 'R$' },\n  { country: 'United States', code: 'USD', symbol: '$' },\n  { country: 'European Union', code: 'EUR', symbol: '€' },\n  { country: 'United Kingdom', code: 'GBP', symbol: '£' },\n  { country: 'Japan', code: 'JPY', symbol: '¥' },\n  { country: 'Argentina', code: 'ARS', symbol: '$' },\n  { country: 'Bolivia', code: 'BOB', symbol: 'Bs.' },\n  { country: 'Chile', code: 'CLP', symbol: '$' },\n  { country: 'Colombia', code: 'COP', symbol: '$' },\n  { country: 'Paraguay', code: 'PYG', symbol: '₲' },\n  { country: 'Peru', code: 'PEN', symbol: 'S/' },\n  { country: 'Uruguay', code: 'UYU', symbol: '$' },\n  { country: 'Venezuela', code: 'VES', symbol: 'Bs.' },\n  { country: 'Mexico', code: 'MXN', symbol: '$' }\n] as const;\n\ntype SupportedCurrency = (typeof SUPPORTED_CURRENCIES)[number]['code'];\n\n@Component({\n  selector: 'liv-currency-input',\n  imports: [...INPUT_IMPORTS, NgxCurrencyDirective],\n  providers: [\n    {\n      provide: LIV_INPUT_COMPONENT_TOKEN,\n      useExisting: CurrencyInputComponent\n    }\n  ],\n  templateUrl: './currency-input.component.html',\n  styleUrl: './currency-input.component.css'\n})\nexport class CurrencyInputComponent extends BaseInput {\n  readonly currencyCode = input<SupportedCurrency>('BRL');\n  readonly align = input<'left' | 'right'>('left');\n  readonly allowNegative = input(false, {\n    transform: booleanAttribute\n  });\n  readonly allowZero = input(false, {\n    transform: booleanAttribute\n  });\n  readonly showPrefix = input(true, {\n    transform: booleanAttribute\n  });\n  readonly showSuffix = input(false, {\n    transform: booleanAttribute\n  });\n  readonly decimal = input<string>(',');\n  readonly thousands = input<string>('.');\n  readonly precision = input<number>(2);\n\n  readonly currencyMaskOptions = computed(() => {\n    const { code, symbol } = this.getCurrency();\n\n    return {\n      align: this.align(),\n      allowNegative: this.allowNegative(),\n      allowZero: this.allowZero(),\n      decimal: this.decimal(),\n      precision: this.precision(),\n      prefix: this.showPrefix() ? `${symbol} ` : '',\n      suffix: this.showSuffix() ? ` ${code}` : '',\n      thousands: this.thousands(),\n      nullable: false,\n      min: null,\n      max: null,\n      inputMode: NgxCurrencyInputMode.Financial\n    };\n  });\n\n  private getCurrency() {\n    const code = this.currencyCode();\n    const symbol =\n      SUPPORTED_CURRENCIES.find((c) => c.code === code)?.symbol || '';\n    return {\n      code,\n      symbol\n    };\n  }\n\n  constructor(@Self() @Optional() control: NgControl) {\n    super(control);\n  }\n}\n",
            "styleUrl": "./currency-input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 94,
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "BaseInput"
            ],
            "templateData": "<div\n  [class]=\"wrapperClasses\"\n  [attr.data-size]=\"size()\"\n  [attr.data-invalid]=\"isInvalid()\"\n>\n  <input\n    #inputRef\n    ngpInput\n    [class]=\"inputClasses\"\n    [ngClass]=\"dynamicClasses()\"\n    type=\"text\"\n    [attr.id]=\"id()\"\n    [name]=\"name()\"\n    [(ngModel)]=\"value\"\n    [placeholder]=\"placeholder()\"\n    [disabled]=\"props().disabled\"\n    [readOnly]=\"props().readonly\"\n    [autocomplete]=\"autocomplete()\"\n    [autocapitalize]=\"autocapitalize()\"\n    (focus)=\"handleFocus($event)\"\n    (blur)=\"handleBlur($event)\"\n    [attr.maxlength]=\"maxlength()\"\n    [attr.aria-invalid]=\"isInvalid()\"\n    [attr.aria-describedby]=\"id() + '-error'\"\n    currencyMask\n    [currencyMask]=\"currencyMaskOptions()\"\n  />\n</div>\n"
        },
        {
            "name": "FormFieldComponent",
            "id": "component-FormFieldComponent-d2aa31565386fc02a7518f816ba1904983cbd712646bfa68329a024d05893d5a4e928618726660f14324f796d82042abfef85f2148fd0aba44dcd1ca4b7d3cf4",
            "file": "projects/design-system/components/src/form-field/form-field.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "liv-form-field",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "hint",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "label",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_error",
                    "defaultValue": "signal<string | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "_isRequired",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 71,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "control",
                    "defaultValue": "computed(() => this.livInput()?.control)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 73,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "errorMessage",
                    "defaultValue": "computed(() => {\n    return this._error();\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 75,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isRequired",
                    "defaultValue": "this._isRequired.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "livInput",
                    "defaultValue": "contentChild<BaseInput>(LIV_INPUT_COMPONENT_TOKEN)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "statusChangesSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 81,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "checkIfRequired",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "cleanupStatusChangesSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "getErrorMessage",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "errors",
                            "type": "Record<string | > | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 157,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "errors",
                            "type": "Record<string | > | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 99,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setupControlStatusEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "updateControlState",
                    "args": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 133,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "ngControl",
                            "type": "NgControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgpFormField"
                },
                {
                    "name": "NgpLabel"
                },
                {
                    "name": "NgpError"
                },
                {
                    "name": "NgpDescription"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { trigger, transition, style, animate } from '@angular/animations';\nimport {\n  Component,\n  OnInit,\n  input,\n  computed,\n  contentChild,\n  signal,\n  effect,\n  OnDestroy\n} from '@angular/core';\nimport { AbstractControl, NgControl } from '@angular/forms';\n\nimport {\n  NgpFormField,\n  NgpLabel,\n  NgpError,\n  NgpDescription\n} from 'ng-primitives/form-field';\nimport { Subscription } from 'rxjs';\n\nimport { getFormErrorMessage } from './get-form-error-message';\nimport { IconComponent } from '../icon';\nimport { BaseInput } from '../input/base/base-input';\nimport { LIV_INPUT_COMPONENT_TOKEN } from '../input/base/input-tokens';\n\n@Component({\n  selector: 'liv-form-field',\n  imports: [NgpFormField, NgpLabel, NgpError, NgpDescription, IconComponent],\n  templateUrl: './form-field.component.html',\n  styleUrl: './form-field.component.css',\n  animations: [\n    trigger('fadeSlide', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'translateY(-12px)',\n          height: '0',\n          overflow: 'hidden'\n        }),\n        animate(\n          '200ms ease-out',\n          style({\n            opacity: 1,\n            transform: 'translateY(0)',\n            height: '*'\n          })\n        )\n      ]),\n      transition(':leave', [\n        animate(\n          '150ms ease-in',\n          style({\n            opacity: 0,\n            transform: 'translateY(-8px)',\n            height: '0',\n            overflow: 'hidden'\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class FormFieldComponent implements OnInit, OnDestroy {\n  readonly hint = input<string | undefined>(undefined);\n  readonly label = input<string | undefined>(undefined);\n\n  readonly livInput = contentChild<BaseInput>(LIV_INPUT_COMPONENT_TOKEN);\n\n  private readonly _error = signal<string | null>(null);\n  private readonly _isRequired = signal<boolean>(false);\n\n  readonly control = computed(() => this.livInput()?.control);\n\n  readonly errorMessage = computed(() => {\n    return this._error();\n  });\n\n  readonly isRequired = this._isRequired.asReadonly();\n\n  private statusChangesSubscription: Subscription | null = null;\n\n  constructor() {\n    this.setupControlStatusEffect();\n\n    effect(() => {\n      console.log(this.livInput());\n    });\n  }\n\n  ngOnInit(): void {\n    if (!this.livInput() || !this.livInput()?.control) {\n      console.warn(\n        'FormFieldComponent requires a LIV input component (such as <liv-input>, <liv-count-input>, etc.) with an NgControl (formControlName/ngModel).'\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.cleanupStatusChangesSubscription();\n  }\n\n  private setupControlStatusEffect(): void {\n    effect(() => {\n      const ngControl = this.control();\n\n      this.cleanupStatusChangesSubscription();\n\n      if (ngControl?.statusChanges) {\n        this.updateControlState(ngControl);\n\n        this.statusChangesSubscription = ngControl.statusChanges.subscribe(\n          () => {\n            this.updateControlState(ngControl);\n          }\n        );\n      } else if (ngControl) {\n        this.updateControlState(ngControl);\n      } else {\n        this._error.set(null);\n        this._isRequired.set(false);\n      }\n    });\n  }\n\n  private cleanupStatusChangesSubscription(): void {\n    if (this.statusChangesSubscription) {\n      this.statusChangesSubscription.unsubscribe();\n      this.statusChangesSubscription = null;\n    }\n  }\n\n  private updateControlState(ngControl: NgControl): void {\n    if (!ngControl) return;\n\n    const isRequired = this.checkIfRequired(ngControl);\n    this._isRequired.set(isRequired);\n\n    const { touched, invalid, errors } = ngControl;\n    const shouldShowError = touched && invalid;\n\n    if (shouldShowError) {\n      this._error.set(this.getErrorMessage(ngControl, errors));\n    } else {\n      this._error.set(null);\n    }\n  }\n\n  private checkIfRequired(ngControl: NgControl): boolean {\n    if (!ngControl.control?.validator) {\n      return false;\n    }\n    const validator = ngControl.control.validator({} as AbstractControl);\n    return !!(validator && validator['required']);\n  }\n\n  private getErrorMessage(\n    ngControl: NgControl,\n    errors: Record<string, unknown> | null\n  ): string | null {\n    if (!errors) {\n      return null;\n    }\n\n    for (const [propertyName, propertyValue] of Object.entries(errors)) {\n      if (ngControl.dirty || ngControl.touched) {\n        const fieldName = this.label() || this.livInput()?.name() || 'Campo';\n\n        const formErrorMessage = getFormErrorMessage(\n          fieldName,\n          propertyName,\n          propertyValue as Record<string, string>\n        );\n\n        if (formErrorMessage) {\n          return formErrorMessage;\n        }\n\n        if (typeof propertyValue === 'string') {\n          return propertyValue;\n        }\n\n        return 'Campo inválido.';\n      }\n    }\n    return null;\n  }\n}\n",
            "styleUrl": "./form-field.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 81
            },
            "extends": [],
            "implements": [
                "OnInit",
                "OnDestroy"
            ],
            "templateData": "<div ngpFormField data-cid=\"liv-form-field\">\n  <div class=\"space-y-0.5 mb-2\">\n    <label\n      [for]=\"livInput()?.id()\"\n      class=\"block text-sm font-medium leading-5 text-neutral-900 data-[required=true]:after:content-['*'] data-[required=true]:after:ml-0.5 data-[required=true]:after:text-feedback-error-medium\"\n      [attr.data-required]=\"isRequired() ? true : null\"\n    >\n      {{ label() }}\n    </label>\n\n    @if (hint()) {\n      <p ngpDescription class=\"block text-xs leading-4 text-neutral-500\">\n        {{ hint() }}\n      </p>\n    }\n  </div>\n\n  <ng-content />\n\n  @if (errorMessage()) {\n    <div\n      ngpError\n      @fadeSlide\n      class=\"mt-2 flex items-center gap-1.5 overflow-hidden text-feedback-error-medium\"\n    >\n      <liv-icon name=\"lucideCircleAlert\" />\n      <p class=\"text-xs leading-4\">\n        {{ errorMessage() }}\n      </p>\n    </div>\n  }\n</div>\n"
        },
        {
            "name": "IconBaseComponent",
            "id": "component-IconBaseComponent-6aec9e27c0878236ee53f414f1556eef3bbefd8927a5773e36fb6ab09eb0c9ed4c99829448d737884ac4b9f4defdf42c1a6bf42f252594a99b586390d20e39cc",
            "file": "projects/design-system/components/src/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconInput",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ],
                    "required": true
                },
                {
                    "name": "ngClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[] | Record<string, boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "'2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number, number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "style",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport { Component, input, InputSignal } from '@angular/core';\n\nimport { IconName as NgIconName, NgIcon } from '@ng-icons/core';\n\ntype HeroIconName = Extract<\n  Exclude<\n    NgIconName,\n    `hero${string}Solid` | `hero${string}Mini` | `hero${string}Micro`\n  >,\n  `hero${string}`\n>;\n\ntype LucideIconName = Extract<NgIconName, `lucide${string}`>;\n\ntype IconName = HeroIconName | LucideIconName;\n\nexport type IconInput = IconName | (string & {});\n\ninterface IconBaseComponentProps {\n  name: InputSignal<IconInput>;\n  size: InputSignal<string>;\n  class?: InputSignal<string>;\n  ngClass?: InputSignal<string | string[] | Record<string, boolean>>;\n  style?: InputSignal<Record<string, string>>;\n}\n\n@Component({\n  standalone: true,\n  template: ''\n})\nabstract class IconBaseComponent implements IconBaseComponentProps {\n  readonly name = input.required<IconInput>();\n  readonly size = input('', {\n    transform: (value: string) => {\n      if (value === '') return value; // Allow empty string\n      const sizeNum = Number(value);\n      if (isNaN(sizeNum) || sizeNum <= 0) {\n        throw new Error(\n          `Invalid size value: ${value}. Must be a positive number.`\n        );\n      }\n      return value;\n    }\n  });\n  readonly strokeWidth = input<string | number, number>('2', {\n    transform: (value: string | number) => {\n      if (typeof value === 'string') {\n        const num = parseFloat(value);\n        if (isNaN(num)) {\n          throw new Error(\n            `Invalid strokeWidth value: ${value}. Must be a valid number.`\n          );\n        }\n        return num;\n      }\n      return value;\n    }\n  });\n  readonly class = input<string>('');\n  readonly ngClass = input<string | string[] | Record<string, boolean>>('');\n  readonly style = input<Record<string, string>>({});\n}\n@Component({\n  selector: 'liv-icon',\n  imports: [NgIcon, NgClass],\n  templateUrl: './icon.component.html',\n  styleUrl: './icon.component.css',\n  host: {\n    class: 'contents'\n  }\n})\nexport class IconComponent extends IconBaseComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "IconBaseComponentProps"
            ]
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-6aec9e27c0878236ee53f414f1556eef3bbefd8927a5773e36fb6ab09eb0c9ed4c99829448d737884ac4b9f4defdf42c1a6bf42f252594a99b586390d20e39cc",
            "file": "projects/design-system/components/src/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "liv-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "IconBaseComponent"
                    }
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconInput",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        148
                    ],
                    "required": true,
                    "inheritance": {
                        "file": "IconBaseComponent"
                    }
                },
                {
                    "name": "ngClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | string[] | Record<string, boolean>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "IconBaseComponent"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "IconBaseComponent"
                    }
                },
                {
                    "name": "strokeWidth",
                    "defaultValue": "'2'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | number, number",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "IconBaseComponent"
                    }
                },
                {
                    "name": "style",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<string, string>",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "IconBaseComponent"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "NgIcon"
                },
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgClass } from '@angular/common';\nimport { Component, input, InputSignal } from '@angular/core';\n\nimport { IconName as NgIconName, NgIcon } from '@ng-icons/core';\n\ntype HeroIconName = Extract<\n  Exclude<\n    NgIconName,\n    `hero${string}Solid` | `hero${string}Mini` | `hero${string}Micro`\n  >,\n  `hero${string}`\n>;\n\ntype LucideIconName = Extract<NgIconName, `lucide${string}`>;\n\ntype IconName = HeroIconName | LucideIconName;\n\nexport type IconInput = IconName | (string & {});\n\ninterface IconBaseComponentProps {\n  name: InputSignal<IconInput>;\n  size: InputSignal<string>;\n  class?: InputSignal<string>;\n  ngClass?: InputSignal<string | string[] | Record<string, boolean>>;\n  style?: InputSignal<Record<string, string>>;\n}\n\n@Component({\n  standalone: true,\n  template: ''\n})\nabstract class IconBaseComponent implements IconBaseComponentProps {\n  readonly name = input.required<IconInput>();\n  readonly size = input('', {\n    transform: (value: string) => {\n      if (value === '') return value; // Allow empty string\n      const sizeNum = Number(value);\n      if (isNaN(sizeNum) || sizeNum <= 0) {\n        throw new Error(\n          `Invalid size value: ${value}. Must be a positive number.`\n        );\n      }\n      return value;\n    }\n  });\n  readonly strokeWidth = input<string | number, number>('2', {\n    transform: (value: string | number) => {\n      if (typeof value === 'string') {\n        const num = parseFloat(value);\n        if (isNaN(num)) {\n          throw new Error(\n            `Invalid strokeWidth value: ${value}. Must be a valid number.`\n          );\n        }\n        return num;\n      }\n      return value;\n    }\n  });\n  readonly class = input<string>('');\n  readonly ngClass = input<string | string[] | Record<string, boolean>>('');\n  readonly style = input<Record<string, string>>({});\n}\n@Component({\n  selector: 'liv-icon',\n  imports: [NgIcon, NgClass],\n  templateUrl: './icon.component.html',\n  styleUrl: './icon.component.css',\n  host: {\n    class: 'contents'\n  }\n})\nexport class IconComponent extends IconBaseComponent {}\n",
            "styleUrl": "./icon.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [
                "IconBaseComponent"
            ],
            "templateData": "<ng-icon\n  [name]=\"name()\"\n  [size]=\"size()\"\n  [strokeWidth]=\"strokeWidth()\"\n  [class]=\"class()\"\n  [ngClass]=\"ngClass()\"\n  [style]=\"style()\"\n/>\n"
        },
        {
            "name": "InputComponent",
            "id": "component-InputComponent-c01a69f18af1474bb21505c856d1394ed9668cea02bb9a22d682c069d849a88488cfacbad49ad89b394ed5db91530d82dc3fdf9c10055e3a762ecbc356ddbd66",
            "file": "projects/design-system/components/src/input/input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "InputComponent",
                    "type": "component"
                }
            ],
            "selector": "liv-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "autocapitalize",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"words\" | \"characters\" | \"on\" | \"off\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "componentId",
                    "defaultValue": "'', {    alias: 'id'  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "maxlength",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "shape",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"square\" | \"rounded\" | \"pill\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "blur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "focus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isInvalid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isRequired",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isValid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_props",
                    "defaultValue": "signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        171,
                        171,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "dynamicClasses",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "formDisabled",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "inputRef",
                    "defaultValue": "viewChild<ElementRef<HTMLInputElement>>('inputRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "this._isInvalid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isRequired",
                    "defaultValue": "this._isRequired.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isValid",
                    "defaultValue": "this._isValid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onChangeCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 295,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onTouchedCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "props",
                    "defaultValue": "this._props.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "statusChangesSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "wrapperClasses",
                    "defaultValue": "WRAPPER_CLASSES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124,
                        164
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "checkIfRequired",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "cleanupStatusChangesSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setProps",
                    "args": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupControlObservables",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupDisabledEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupInputEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupPropsEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupValueEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "updateControlState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "INPUT_IMPORTS"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Optional, Self, input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { BaseInput } from './base/base-input';\nimport {\n  INPUT_IMPORTS,\n  LEADING_SPAN_CLASSES_NON_INTERACTIVE,\n  TRAILING_SPAN_CLASSES_NON_INTERACTIVE\n} from './base/input-constants';\nimport { LIV_INPUT_COMPONENT_TOKEN } from './base/input-tokens';\n\n@Component({\n  selector: 'liv-input',\n  imports: INPUT_IMPORTS,\n  providers: [\n    {\n      provide: LIV_INPUT_COMPONENT_TOKEN,\n      useExisting: InputComponent\n    }\n  ],\n  templateUrl: './input.component.html',\n  styleUrl: './input.component.css'\n})\nexport class InputComponent extends BaseInput {\n  readonly type = input<string>('text');\n\n  protected override get leadingSpanClasses(): string {\n    return LEADING_SPAN_CLASSES_NON_INTERACTIVE;\n  }\n\n  protected override get trailingSpanClasses(): string {\n    return TRAILING_SPAN_CLASSES_NON_INTERACTIVE;\n  }\n\n  constructor(@Self() @Optional() control: NgControl) {\n    super(control);\n  }\n\n  protected override getType(): string {\n    return this.type();\n  }\n}\n",
            "styleUrl": "./input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "BaseInput"
            ],
            "accessors": {
                "leadingSpanClasses": {
                    "name": "leadingSpanClasses",
                    "getSignature": {
                        "name": "leadingSpanClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 27
                    }
                },
                "trailingSpanClasses": {
                    "name": "trailingSpanClasses",
                    "getSignature": {
                        "name": "trailingSpanClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 31
                    }
                }
            },
            "templateData": "<div\n  [class]=\"wrapperClasses\"\n  [attr.data-size]=\"size()\"\n  [attr.data-invalid]=\"isInvalid()\"\n>\n  <span [class]=\"leadingSpanClasses\" data-slot=\"leading\">\n    <ng-content select=\"[slot=leading]\" />\n  </span>\n\n  <input\n    #inputRef\n    ngpInput\n    [class]=\"inputClasses\"\n    [ngClass]=\"dynamicClasses()\"\n    [type]=\"type()\"\n    [id]=\"id()\"\n    [name]=\"name()\"\n    [(ngModel)]=\"value\"\n    [placeholder]=\"placeholder()\"\n    [disabled]=\"props().disabled\"\n    [readOnly]=\"props().readonly\"\n    [autocomplete]=\"autocomplete()\"\n    [autocapitalize]=\"autocapitalize()\"\n    (focus)=\"handleFocus($event)\"\n    (blur)=\"handleBlur($event)\"\n    [attr.maxlength]=\"maxlength()\"\n    [attr.aria-invalid]=\"isInvalid()\"\n    [attr.aria-describedby]=\"id() + '-error'\"\n  />\n\n  <span [class]=\"trailingSpanClasses\" data-slot=\"trailing\">\n    <ng-content select=\"[slot=trailing]\" />\n  </span>\n</div>\n"
        },
        {
            "name": "NumberInputComponent",
            "id": "component-NumberInputComponent-552e3152d47f52860bf3e4bd0275ff10b3fed42069a3c6211146be8bb1d6ffc276b93b9e20b2a30539a104d7b182b4708643444c5b23abbd29f9d0b210c47c75",
            "file": "projects/design-system/components/src/input/number/number-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "NumberInputComponent",
                    "type": "component"
                }
            ],
            "selector": "liv-number-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./number-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "max",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "min",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "step",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        148
                    ],
                    "required": false
                },
                {
                    "name": "autocapitalize",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"words\" | \"characters\" | \"on\" | \"off\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "componentId",
                    "defaultValue": "'', {    alias: 'id'  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "maxlength",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "shape",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"square\" | \"rounded\" | \"pill\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "blur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "focus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "_isInvalid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isRequired",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isValid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_props",
                    "defaultValue": "signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        171,
                        171,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "dynamicClasses",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "formDisabled",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "inputRef",
                    "defaultValue": "viewChild<ElementRef<HTMLInputElement>>('inputRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "this._isInvalid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isRequired",
                    "defaultValue": "this._isRequired.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isValid",
                    "defaultValue": "this._isValid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onChangeCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 295,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onTouchedCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "props",
                    "defaultValue": "this._props.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "statusChangesSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "wrapperClasses",
                    "defaultValue": "WRAPPER_CLASSES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "handleInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "checkIfRequired",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "cleanupStatusChangesSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setProps",
                    "args": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupControlObservables",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupDisabledEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupInputEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupPropsEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupValueEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "updateControlState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "INPUT_IMPORTS"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Optional, Self, input } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { BaseInput } from '../base/base-input';\nimport { INPUT_IMPORTS } from '../base/input-constants';\nimport { LIV_INPUT_COMPONENT_TOKEN } from '../base/input-tokens';\n\n@Component({\n  selector: 'liv-number-input',\n  imports: INPUT_IMPORTS,\n  providers: [\n    {\n      provide: LIV_INPUT_COMPONENT_TOKEN,\n      useExisting: NumberInputComponent\n    }\n  ],\n  templateUrl: './number-input.component.html',\n  styleUrl: './number-input.component.css'\n})\nexport class NumberInputComponent extends BaseInput {\n  readonly min = input<number | undefined>(undefined);\n  readonly max = input<number | undefined>(undefined);\n  readonly step = input<number | undefined>(undefined);\n\n  constructor(@Self() @Optional() control: NgControl) {\n    super(control);\n  }\n\n  handleInput(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    target.value = target.value.replace(/\\D/g, '');\n  }\n}\n",
            "styleUrl": "./number-input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "BaseInput"
            ],
            "templateData": "<div\n  [class]=\"wrapperClasses\"\n  [attr.data-size]=\"size()\"\n  [attr.data-invalid]=\"isInvalid()\"\n>\n  <input\n    #inputRef\n    ngpInput\n    [class]=\"inputClasses\"\n    [ngClass]=\"dynamicClasses()\"\n    type=\"tel\"\n    pattern=\"[0-9]*\"\n    [attr.id]=\"id()\"\n    [name]=\"name()\"\n    [(ngModel)]=\"value\"\n    [placeholder]=\"placeholder()\"\n    [disabled]=\"props().disabled\"\n    [readOnly]=\"props().readonly\"\n    [autocomplete]=\"autocomplete()\"\n    [autocapitalize]=\"autocapitalize()\"\n    (input)=\"handleInput($event)\"\n    (focus)=\"handleFocus($event)\"\n    (blur)=\"handleBlur($event)\"\n    [attr.maxlength]=\"maxlength()\"\n    [attr.min]=\"min()\"\n    [attr.max]=\"max()\"\n    [attr.step]=\"step()\"\n    [attr.aria-invalid]=\"isInvalid()\"\n    [attr.aria-describedby]=\"id() + '-error'\"\n  />\n</div>\n"
        },
        {
            "name": "PasswordInputComponent",
            "id": "component-PasswordInputComponent-1c2e50ab7cadd109a1372566bae2efb568ebd383a7cfc13dab4ca6c307af8bb5983b5df94b4594476bb94ac1e81890482a6fd73f68b0e1e393184778a1abc9a5",
            "file": "projects/design-system/components/src/input/password/password-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "PasswordInputComponent",
                    "type": "component"
                }
            ],
            "selector": "liv-password-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./password-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "autocapitalize",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"words\" | \"characters\" | \"on\" | \"off\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 70,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "autocomplete",
                    "defaultValue": "'off'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "componentId",
                    "defaultValue": "'', {    alias: 'id'  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 57,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "maxlength",
                    "defaultValue": "undefined",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number | undefined",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 63,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "readonly",
                    "defaultValue": "false, { transform: booleanAttribute }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "shape",
                    "defaultValue": "'rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"square\" | \"rounded\" | \"pill\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 65,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "size",
                    "defaultValue": "'md'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"sm\" | \"md\" | \"lg\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 64,
                    "modifierKind": [
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "blur",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 143,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "focus",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusEvent",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 144,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "required": false,
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "propertiesClass": [
                {
                    "name": "computedType",
                    "defaultValue": "computed(() =>\n    this.isVisible() ? 'text' : this.type()\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        148
                    ]
                },
                {
                    "name": "isVisible",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "signal<string>('password')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "_isInvalid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 124,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isRequired",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 126,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_isValid",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 125,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "_props",
                    "defaultValue": "signal<InputProps>({\n    name: '',\n    placeholder: '',\n    disabled: false,\n    readonly: false\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 115,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "control",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgControl",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 146,
                    "decorators": [
                        {
                            "name": "Self",
                            "stringifiedArguments": ""
                        },
                        {
                            "name": "Optional",
                            "stringifiedArguments": ""
                        }
                    ],
                    "modifierKind": [
                        171,
                        171,
                        125,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "dynamicClasses",
                    "defaultValue": "computed(() => {\n    const size = this.size();\n    const isInvalid = this.isInvalid();\n    const shape = this.shape();\n\n    const classes: Record<string, boolean> = {\n      'ring-feedback-error-medium placeholder:text-feedback-error-light text-feedback-error-medium focus:ring-feedback-error-medium':\n        isInvalid,\n      'ring-neutral-400 placeholder:text-neutral-400 text-neutral-700 focus:ring-main-primary-500 hover:ring-main-primary-300':\n        !isInvalid,\n      'rounded-none': shape === 'square',\n      'rounded-md': shape === 'rounded',\n      'rounded-full': shape === 'pill'\n    };\n\n    const sizeConfigs: Record<string, { py: string }> = {\n      sm: { py: 'py-1 text-sm leading-6' },\n      md: { py: 'py-1.5 text-sm leading-6' },\n      lg: { py: 'py-2 text-base leading-7' }\n    };\n\n    const config = sizeConfigs[size];\n    if (config) {\n      classes[config.py] = true;\n    }\n\n    return classes;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 74,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "formDisabled",
                    "defaultValue": "signal<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 122,
                    "modifierKind": [
                        123,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "id",
                    "defaultValue": "linkedSignal(() => {\n    const componentId = this.componentId();\n    if (componentId) {\n      return sanitizeForDataAttr(componentId);\n    }\n    return `liv-input-${Math.random().toString(36).substring(2, 15)}`;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 128,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "inputRef",
                    "defaultValue": "viewChild<ElementRef<HTMLInputElement>>('inputRef')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 72,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isInvalid",
                    "defaultValue": "this._isInvalid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 139,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isRequired",
                    "defaultValue": "this._isRequired.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "isValid",
                    "defaultValue": "this._isValid.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 140,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onChangeCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 295,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "onTouchedCb",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 296,
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "props",
                    "defaultValue": "this._props.asReadonly()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 138,
                    "modifierKind": [
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "statusChangesSubscription",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "value",
                    "defaultValue": "signal<string>('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 121,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "wrapperClasses",
                    "defaultValue": "WRAPPER_CLASSES",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 113,
                    "modifierKind": [
                        124,
                        148
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleVisibility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "checkIfRequired",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "cleanupStatusChangesSubscription",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "getType",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 207,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleBlur",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "handleFocus",
                    "args": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 263,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "FocusEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 216,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 211,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 283,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 287,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "_",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 291,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setProps",
                    "args": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 272,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "Partial<InputProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupControlObservables",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 220,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupDisabledEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupInputEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupPropsEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 169,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "setupValueEffect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "updateControlState",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 236,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 279,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInput"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "INPUT_IMPORTS"
                },
                {
                    "name": "IconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Optional, Self, signal, computed } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { IconComponent } from '../../icon';\nimport { BaseInput } from '../base/base-input';\nimport { INPUT_IMPORTS } from '../base/input-constants';\nimport { LIV_INPUT_COMPONENT_TOKEN } from '../base/input-tokens';\n\n@Component({\n  selector: 'liv-password-input',\n  imports: [...INPUT_IMPORTS, IconComponent],\n  providers: [\n    {\n      provide: LIV_INPUT_COMPONENT_TOKEN,\n      useExisting: PasswordInputComponent\n    }\n  ],\n  templateUrl: './password-input.component.html',\n  styleUrl: './password-input.component.css'\n})\nexport class PasswordInputComponent extends BaseInput {\n  protected readonly type = signal<string>('password');\n  protected readonly isVisible = signal(false);\n\n  readonly computedType = computed(() =>\n    this.isVisible() ? 'text' : this.type()\n  );\n\n  constructor(@Self() @Optional() control: NgControl) {\n    super(control);\n  }\n\n  toggleVisibility(): void {\n    this.isVisible.update((visible) => !visible);\n  }\n}\n",
            "styleUrl": "./password-input.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "control",
                        "type": "NgControl",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [
                "BaseInput"
            ],
            "templateData": "<div\n  [class]=\"wrapperClasses\"\n  [attr.data-size]=\"size()\"\n  [attr.data-invalid]=\"isInvalid()\"\n>\n  <input\n    #inputRef\n    ngpInput\n    [class]=\"inputClasses\"\n    [ngClass]=\"dynamicClasses()\"\n    [type]=\"computedType()\"\n    [attr.id]=\"id()\"\n    [name]=\"name()\"\n    [(ngModel)]=\"value\"\n    [placeholder]=\"placeholder()\"\n    [disabled]=\"props().disabled\"\n    [readOnly]=\"props().readonly\"\n    [autocomplete]=\"autocomplete()\"\n    [autocapitalize]=\"autocapitalize()\"\n    (focus)=\"handleFocus($event)\"\n    (blur)=\"handleBlur($event)\"\n    [attr.maxlength]=\"maxlength()\"\n    [attr.aria-invalid]=\"isInvalid()\"\n    [attr.aria-describedby]=\"id() + '-error'\"\n  />\n\n  <span [class]=\"trailingSpanClasses\">\n    <button\n      type=\"button\"\n      class=\"flex items-center justify-center leading-0 transition-all duration-150 cursor-pointer text-main-primary-500 hover:text-main-primary-600 focus-visible:ring-2 focus-visible:ring-main-primary-500 focus-visible:ring-offset-1 outline-none rounded\"\n      (click)=\"toggleVisibility()\"\n      [attr.aria-label]=\"isVisible() ? 'Hide password' : 'Show password'\"\n    >\n      <liv-icon\n        [size]=\"size() === 'sm' ? '16' : '20'\"\n        [name]=\"isVisible() ? 'lucideEyeClosed' : 'lucideEye'\"\n      />\n    </button>\n  </span>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: [\n    '../components/src/**/*.mdx',\n    '../components/src/**/*.stories.@(js|jsx|mjs|ts|tsx)'\n  ],\n  addons: [\n    '@storybook/addon-docs',\n    '@chromatic-com/storybook',\n    '@storybook/addon-styling-webpack'\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {}\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [InputComponent, ReactiveFormsModule]\n    },\n    props: {\n      formGroup: new FormGroup({\n        name: new FormControl('', [Validators.required])\n      })\n    },\n    template: `\n      <form [formGroup]=\"formGroup\">\n        <liv-form-field label=\"Nome\" hint=\"Digite seu nome completo\">\n          <liv-input formControlName=\"name\" placeholder=\"Seu nome\" />\n        </liv-form-field>\n      </form>\n    `\n  })\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter text',\n    size: 'md',\n    shape: 'rounded',\n    type: 'text'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter quantity',\n    min: 1,\n    max: 100,\n    step: 1,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter amount',\n    currencyCode: 'BRL',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter number',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter password',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ButtonStory>",
                "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: true,\n    content: 'Disabled Button',\n    leadingContent: '',\n    trailingContent: ''\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Disabled input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Disabled count input',\n    disabled: true,\n    min: 1,\n    max: 100,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Disabled currency input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Disabled number input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Disabled password input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Email",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter email',\n    type: 'email',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "FilledVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ButtonStory>",
                "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"filled\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"filled\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"filled\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "GhostVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ButtonStory>",
                "defaultValue": "{\n  args: {\n    variant: 'ghost',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"ghost\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"ghost\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"ghost\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"ghost\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "heroIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'heroArrowDown',\n  'heroArrowLeft',\n  'heroArrowRight',\n  'heroArrowUp',\n  'heroArrowUpCircle',\n  'heroArrowUpTray',\n  'heroArrowUturnDown',\n  'heroArrowUturnLeft',\n  'heroArrowUturnRight',\n  'heroArrowUturnUp'\n]"
            },
            {
                "name": "HeroIconsShowcase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 16px; flex-wrap: wrap;\">\n        ${heroIcons.map((name) => `<liv-icon name=\"${name}\" />`).join('')}\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "INPUT_CLASSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'shadow-sm block w-full border-0 outline-none transition-all duration-150 disabled:cursor-not-allowed ring-1 ring-inset focus-within:ring-2 disabled:opacity-40 pr-3 pl-3 group-has-[span[data-slot=leading]:not(:empty)]/wrapper:pl-10 group-has-[span[data-slot=trailing]:not(:empty)]/wrapper:pr-10'"
            },
            {
                "name": "INPUT_IMPORTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[NgpInput, FormsModule, NgClass]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Large input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Large count input',\n    min: 1,\n    max: 100,\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Large currency input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Large number input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Large password input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "LargeRange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter quantity',\n    min: 1,\n    max: 1000,\n    step: 10,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "LEADING_SPAN_CLASSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'peer/leading absolute inset-y-0 left-3 flex items-center empty:hidden'"
            },
            {
                "name": "LEADING_SPAN_CLASSES_NON_INTERACTIVE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`${LEADING_SPAN_CLASSES} pointer-events-none`"
            },
            {
                "name": "LinkVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ButtonStory>",
                "defaultValue": "{\n  args: {\n    variant: 'link',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"link\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"link\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"link\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"link\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "LIV_INPUT_COMPONENT_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-tokens.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken(\n  'LIV_INPUT_COMPONENT_TOKEN'\n)"
            },
            {
                "name": "lucideIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'lucideAlignJustify',\n  'lucideAmbulance',\n  'lucideAmpersand',\n  'lucideAnchor',\n  'lucideAngry',\n  'lucideAnnoyed',\n  'lucideAntenna',\n  'lucideAnvil',\n  'lucideAperture',\n  'lucideApple',\n  'lucideEyeOff'\n]"
            },
            {
                "name": "LucideIconsShowcase",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  args: {\n    class: '',\n    style: 'color: red;'\n  },\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 16px; flex-wrap: wrap;\">\n        ${lucideIcons.map((name) => `<liv-icon name=\"${name}\" />`).join('')}\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonStory>",
                "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['filled', 'outline', 'ghost', 'link']\n    },\n    intent: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'tertiary', 'destructive']\n    },\n    shape: {\n      control: { type: 'select' },\n      options: ['square', 'rounded', 'pill']\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg', 'xl']\n    },\n    disabled: {\n      control: 'boolean'\n    },\n    leadingContent: {\n      control: 'text',\n      description: 'Conteúdo para o slot leading'\n    },\n    trailingContent: {\n      control: 'text',\n      description: 'Conteúdo para o slot trailing'\n    }\n  },\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button liv-button [variant]=\"variant\" [intent]=\"intent\" [shape]=\"shape\" [size]=\"size\" [disabled]=\"disabled\">\n        @if (leadingContent) {\n          <span slot=\"leading\">{{leadingContent}}</span>\n        }\n        {{content}}\n        @if (trailingContent) {\n          <span slot=\"trailing\">{{trailingContent}}</span>\n        }\n      </button>\n    `\n  })\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'Components/Form Field',\n  component: FormFieldComponent,\n  tags: ['autodocs']\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<IconStory>",
                "defaultValue": "{\n  title: 'Components/Icon',\n  component: IconComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    name: {\n      control: {\n        type: 'text'\n      }\n    },\n    size: {\n      control: {\n        type: 'text'\n      }\n    },\n    strokeWidth: {\n      control: { type: 'number' }\n    },\n    class: {\n      control: { type: 'text' }\n    },\n    ngClass: {\n      control: { type: 'object' }\n    },\n    style: {\n      control: { type: 'text' }\n    }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n  title: 'Components/Input/Input',\n  tags: ['autodocs'],\n  component: InputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    type: {\n      control: 'select',\n      options: ['text', 'email', 'tel', 'url', 'search']\n    },\n    placeholder: { control: 'text' }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CountInputComponent>",
                "defaultValue": "{\n  title: 'Components/Input/Count',\n  tags: ['autodocs'],\n  component: CountInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' },\n    min: { control: 'number' },\n    max: { control: 'number' },\n    step: { control: 'number' }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CurrencyInputComponent>",
                "defaultValue": "{\n  title: 'Components/Input/Currency',\n  tags: ['autodocs'],\n  component: CurrencyInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' },\n    currencyCode: {\n      control: 'select',\n      options: SUPPORTED_CURRENCIES.map((c) => c.code)\n    },\n    align: { control: 'select', options: ['left', 'right'] },\n    allowNegative: { control: 'boolean' },\n    allowZero: { control: 'boolean' },\n    decimal: { control: 'text' },\n    thousands: { control: 'text' },\n    precision: { control: 'number' }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NumberInputComponent>",
                "defaultValue": "{\n  title: 'Components/Input/Number',\n  tags: ['autodocs'],\n  component: NumberInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' },\n    min: { control: 'number' },\n    max: { control: 'number' },\n    step: { control: 'number' }\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PasswordInputComponent>",
                "defaultValue": "{\n  title: 'Components/Input/Password',\n  tags: ['autodocs'],\n  component: PasswordInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' }\n  }\n}"
            },
            {
                "name": "OutlineVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ButtonStory>",
                "defaultValue": "{\n  args: {\n    variant: 'outline',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"outline\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"outline\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"outline\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"outline\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "Phone",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter phone number',\n    type: 'tel',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  },\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimations(), provideTheme()]\n    })\n  ]\n}"
            },
            {
                "name": "Search",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Search...',\n    type: 'search',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Shapes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ButtonStory>",
                "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"square\" size=\"md\">Square</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"md\">Rounded</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"pill\" size=\"md\">Pill</button>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "Sizes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<ButtonStory>",
                "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2 items-end\">\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"sm\">Small</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"md\">Medium</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"lg\">Large</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"xl\">Extra Large</button>\n      </div>\n    `\n  })\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Small input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Small count input',\n    min: 1,\n    max: 50,\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Small currency input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Small number input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Small password input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "SmallRange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter quantity',\n    min: 0,\n    max: 10,\n    step: 1,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "SUPPORTED_CURRENCIES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[\n  { country: 'Brazil', code: 'BRL', symbol: 'R$' },\n  { country: 'United States', code: 'USD', symbol: '$' },\n  { country: 'European Union', code: 'EUR', symbol: '€' },\n  { country: 'United Kingdom', code: 'GBP', symbol: '£' },\n  { country: 'Japan', code: 'JPY', symbol: '¥' },\n  { country: 'Argentina', code: 'ARS', symbol: '$' },\n  { country: 'Bolivia', code: 'BOB', symbol: 'Bs.' },\n  { country: 'Chile', code: 'CLP', symbol: '$' },\n  { country: 'Colombia', code: 'COP', symbol: '$' },\n  { country: 'Paraguay', code: 'PYG', symbol: '₲' },\n  { country: 'Peru', code: 'PEN', symbol: 'S/' },\n  { country: 'Uruguay', code: 'UYU', symbol: '$' },\n  { country: 'Venezuela', code: 'VES', symbol: 'Bs.' },\n  { country: 'Mexico', code: 'MXN', symbol: '$' }\n] as const"
            },
            {
                "name": "TRAILING_SPAN_CLASSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'peer/trailing absolute inset-y-0 right-3 flex items-center empty:hidden'"
            },
            {
                "name": "TRAILING_SPAN_CLASSES_NON_INTERACTIVE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "`${TRAILING_SPAN_CLASSES} pointer-events-none`"
            },
            {
                "name": "USD",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter amount in USD',\n    currencyCode: 'USD',\n    decimal: '.',\n    thousands: ',',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "WithIcons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [IconComponent]\n    },\n    template: `\n      <liv-input \n        placeholder=\"Search...\" \n        size=\"md\" \n        shape=\"rounded\" \n    >\n      <liv-icon name=\"heroHeart\" slot=\"leading\"></liv-icon>\n      <liv-icon name=\"lucideUser\" slot=\"trailing\"></liv-icon>\n    </liv-input>\n    `\n  })\n}"
            },
            {
                "name": "WithLimits",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter amount',\n    currencyCode: 'EUR',\n    allowNegative: false,\n    allowZero: true,\n    precision: 2,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "WithLimits",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    placeholder: 'Enter number (1-100)',\n    min: 1,\n    max: 100,\n    step: 1,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
            },
            {
                "name": "WRAPPER_CLASSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/design-system/components/src/input/base/input-constants.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'group/wrapper relative'"
            }
        ],
        "functions": [
            {
                "name": "getFormErrorMessage",
                "file": "projects/design-system/components/src/form-field/get-form-error-message.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fieldName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "validatorName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "validatorValue",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "fieldName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "validatorName",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "validatorValue",
                        "type": "Record",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "sanitizeForDataAttr",
                "file": "projects/design-system/components/src/input/base/base-input.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "ButtonIntent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"destructive\"",
                "file": "projects/design-system/components/src/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ButtonShape",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"square\" | \"rounded\" | \"pill\"",
                "file": "projects/design-system/components/src/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ButtonSize",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
                "file": "projects/design-system/components/src/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ButtonStory",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "ButtonVariant",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"filled\" | \"outline\" | \"ghost\" | \"link\"",
                "file": "projects/design-system/components/src/button/button.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "HeroIconName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Extract<Exclude<NgIconName, template literal type | template literal type | template literal type> | template literal type>",
                "file": "projects/design-system/components/src/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "IconInput",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "IconName | ",
                "file": "projects/design-system/components/src/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "IconName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "HeroIconName | LucideIconName",
                "file": "projects/design-system/components/src/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "IconStory",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "IconComponent",
                "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "LucideIconName",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Extract<NgIconName | template literal type>",
                "file": "projects/design-system/components/src/icon/icon.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<>",
                "file": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "projects/design-system/components/src/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CountInputComponent>",
                "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CurrencyInputComponent>",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NumberInputComponent>",
                "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PasswordInputComponent>",
                "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 184
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/design-system/components/src/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 188
            },
            {
                "name": "SupportedCurrency",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/design-system/components/src/input/currency/currency-input.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 200
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/design-system/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: [\n    '../components/src/**/*.mdx',\n    '../components/src/**/*.stories.@(js|jsx|mjs|ts|tsx)'\n  ],\n  addons: [\n    '@storybook/addon-docs',\n    '@chromatic-com/storybook',\n    '@storybook/addon-styling-webpack'\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {}\n  }\n}"
                }
            ],
            "projects/design-system/components/src/form-field/form-field.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [InputComponent, ReactiveFormsModule]\n    },\n    props: {\n      formGroup: new FormGroup({\n        name: new FormControl('', [Validators.required])\n      })\n    },\n    template: `\n      <form [formGroup]=\"formGroup\">\n        <liv-form-field label=\"Nome\" hint=\"Digite seu nome completo\">\n          <liv-input formControlName=\"name\" placeholder=\"Seu nome\" />\n        </liv-form-field>\n      </form>\n    `\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'Components/Form Field',\n  component: FormFieldComponent,\n  tags: ['autodocs']\n}"
                }
            ],
            "projects/design-system/components/src/input/input.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter text',\n    size: 'md',\n    shape: 'rounded',\n    type: 'text'\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Disabled input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Email",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter email',\n    type: 'email',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Large input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n  title: 'Components/Input/Input',\n  tags: ['autodocs'],\n  component: InputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    type: {\n      control: 'select',\n      options: ['text', 'email', 'tel', 'url', 'search']\n    },\n    placeholder: { control: 'text' }\n  }\n}"
                },
                {
                    "name": "Phone",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter phone number',\n    type: 'tel',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Search",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Search...',\n    type: 'search',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Small input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "WithIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    moduleMetadata: {\n      imports: [IconComponent]\n    },\n    template: `\n      <liv-input \n        placeholder=\"Search...\" \n        size=\"md\" \n        shape=\"rounded\" \n    >\n      <liv-icon name=\"heroHeart\" slot=\"leading\"></liv-icon>\n      <liv-icon name=\"lucideUser\" slot=\"trailing\"></liv-icon>\n    </liv-input>\n    `\n  })\n}"
                }
            ],
            "projects/design-system/components/src/input/count/count-input.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter quantity',\n    min: 1,\n    max: 100,\n    step: 1,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Disabled count input',\n    disabled: true,\n    min: 1,\n    max: 100,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Large count input',\n    min: 1,\n    max: 100,\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "LargeRange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter quantity',\n    min: 1,\n    max: 1000,\n    step: 10,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CountInputComponent>",
                    "defaultValue": "{\n  title: 'Components/Input/Count',\n  tags: ['autodocs'],\n  component: CountInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' },\n    min: { control: 'number' },\n    max: { control: 'number' },\n    step: { control: 'number' }\n  }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Small count input',\n    min: 1,\n    max: 50,\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "SmallRange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter quantity',\n    min: 0,\n    max: 10,\n    step: 1,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                }
            ],
            "projects/design-system/components/src/input/currency/currency-input.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter amount',\n    currencyCode: 'BRL',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Disabled currency input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Large currency input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CurrencyInputComponent>",
                    "defaultValue": "{\n  title: 'Components/Input/Currency',\n  tags: ['autodocs'],\n  component: CurrencyInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' },\n    currencyCode: {\n      control: 'select',\n      options: SUPPORTED_CURRENCIES.map((c) => c.code)\n    },\n    align: { control: 'select', options: ['left', 'right'] },\n    allowNegative: { control: 'boolean' },\n    allowZero: { control: 'boolean' },\n    decimal: { control: 'text' },\n    thousands: { control: 'text' },\n    precision: { control: 'number' }\n  }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Small currency input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "USD",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter amount in USD',\n    currencyCode: 'USD',\n    decimal: '.',\n    thousands: ',',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "WithLimits",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter amount',\n    currencyCode: 'EUR',\n    allowNegative: false,\n    allowZero: true,\n    precision: 2,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                }
            ],
            "projects/design-system/components/src/input/number/number-input.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter number',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Disabled number input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Large number input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NumberInputComponent>",
                    "defaultValue": "{\n  title: 'Components/Input/Number',\n  tags: ['autodocs'],\n  component: NumberInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' },\n    min: { control: 'number' },\n    max: { control: 'number' },\n    step: { control: 'number' }\n  }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Small number input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "WithLimits",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter number (1-100)',\n    min: 1,\n    max: 100,\n    step: 1,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                }
            ],
            "projects/design-system/components/src/input/password/password-input.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Enter password',\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Disabled password input',\n    disabled: true,\n    size: 'md',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Large password input',\n    size: 'lg',\n    shape: 'rounded'\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PasswordInputComponent>",
                    "defaultValue": "{\n  title: 'Components/Input/Password',\n  tags: ['autodocs'],\n  component: PasswordInputComponent,\n  argTypes: {\n    size: { control: 'select', options: ['sm', 'md', 'lg'] },\n    shape: { control: 'select', options: ['square', 'rounded', 'pill'] },\n    disabled: { control: 'boolean' },\n    readonly: { control: 'boolean' },\n    placeholder: { control: 'text' }\n  }\n}"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    placeholder: 'Small password input',\n    size: 'sm',\n    shape: 'rounded'\n  }\n}"
                }
            ],
            "projects/design-system/components/src/button/button.component.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ButtonStory>",
                    "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: true,\n    content: 'Disabled Button',\n    leadingContent: '',\n    trailingContent: ''\n  }\n}"
                },
                {
                    "name": "FilledVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ButtonStory>",
                    "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"filled\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"filled\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"filled\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "GhostVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ButtonStory>",
                    "defaultValue": "{\n  args: {\n    variant: 'ghost',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"ghost\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"ghost\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"ghost\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"ghost\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "LinkVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ButtonStory>",
                    "defaultValue": "{\n  args: {\n    variant: 'link',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"link\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"link\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"link\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"link\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonStory>",
                    "defaultValue": "{\n  title: 'Components/Button',\n  component: ButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: { type: 'select' },\n      options: ['filled', 'outline', 'ghost', 'link']\n    },\n    intent: {\n      control: { type: 'select' },\n      options: ['primary', 'secondary', 'tertiary', 'destructive']\n    },\n    shape: {\n      control: { type: 'select' },\n      options: ['square', 'rounded', 'pill']\n    },\n    size: {\n      control: { type: 'select' },\n      options: ['sm', 'md', 'lg', 'xl']\n    },\n    disabled: {\n      control: 'boolean'\n    },\n    leadingContent: {\n      control: 'text',\n      description: 'Conteúdo para o slot leading'\n    },\n    trailingContent: {\n      control: 'text',\n      description: 'Conteúdo para o slot trailing'\n    }\n  },\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <button liv-button [variant]=\"variant\" [intent]=\"intent\" [shape]=\"shape\" [size]=\"size\" [disabled]=\"disabled\">\n        @if (leadingContent) {\n          <span slot=\"leading\">{{leadingContent}}</span>\n        }\n        {{content}}\n        @if (trailingContent) {\n          <span slot=\"trailing\">{{trailingContent}}</span>\n        }\n      </button>\n    `\n  })\n}"
                },
                {
                    "name": "OutlineVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ButtonStory>",
                    "defaultValue": "{\n  args: {\n    variant: 'outline',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"outline\" intent=\"primary\" shape=\"rounded\" size=\"md\">Primary</button>\n        <button liv-button variant=\"outline\" intent=\"secondary\" shape=\"rounded\" size=\"md\">Secondary</button>\n        <button liv-button variant=\"outline\" intent=\"tertiary\" shape=\"rounded\" size=\"md\">Tertiary</button>\n        <button liv-button variant=\"outline\" intent=\"destructive\" shape=\"rounded\" size=\"md\">Destructive</button>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "Shapes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ButtonStory>",
                    "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2\">\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"square\" size=\"md\">Square</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"md\">Rounded</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"pill\" size=\"md\">Pill</button>\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<ButtonStory>",
                    "defaultValue": "{\n  args: {\n    variant: 'filled',\n    intent: 'primary',\n    shape: 'rounded',\n    size: 'md',\n    disabled: false,\n    content: 'Button',\n    leadingContent: '',\n    trailingContent: ''\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"flex gap-2 items-end\">\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"sm\">Small</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"md\">Medium</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"lg\">Large</button>\n        <button liv-button variant=\"filled\" intent=\"primary\" shape=\"rounded\" size=\"xl\">Extra Large</button>\n      </div>\n    `\n  })\n}"
                }
            ],
            "projects/design-system/components/src/icon/icon.component.stories.ts": [
                {
                    "name": "heroIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'heroArrowDown',\n  'heroArrowLeft',\n  'heroArrowRight',\n  'heroArrowUp',\n  'heroArrowUpCircle',\n  'heroArrowUpTray',\n  'heroArrowUturnDown',\n  'heroArrowUturnLeft',\n  'heroArrowUturnRight',\n  'heroArrowUturnUp'\n]"
                },
                {
                    "name": "HeroIconsShowcase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 16px; flex-wrap: wrap;\">\n        ${heroIcons.map((name) => `<liv-icon name=\"${name}\" />`).join('')}\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "lucideIcons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'lucideAlignJustify',\n  'lucideAmbulance',\n  'lucideAmpersand',\n  'lucideAnchor',\n  'lucideAngry',\n  'lucideAnnoyed',\n  'lucideAntenna',\n  'lucideAnvil',\n  'lucideAperture',\n  'lucideApple',\n  'lucideEyeOff'\n]"
                },
                {
                    "name": "LucideIconsShowcase",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  args: {\n    class: '',\n    style: 'color: red;'\n  },\n  render: () => ({\n    template: `\n      <div style=\"display: flex; gap: 16px; flex-wrap: wrap;\">\n        ${lucideIcons.map((name) => `<liv-icon name=\"${name}\" />`).join('')}\n      </div>\n    `\n  })\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<IconStory>",
                    "defaultValue": "{\n  title: 'Components/Icon',\n  component: IconComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    name: {\n      control: {\n        type: 'text'\n      }\n    },\n    size: {\n      control: {\n        type: 'text'\n      }\n    },\n    strokeWidth: {\n      control: { type: 'number' }\n    },\n    class: {\n      control: { type: 'text' }\n    },\n    ngClass: {\n      control: { type: 'object' }\n    },\n    style: {\n      control: { type: 'text' }\n    }\n  }\n}"
                }
            ],
            "projects/design-system/components/src/input/base/input-constants.ts": [
                {
                    "name": "INPUT_CLASSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'shadow-sm block w-full border-0 outline-none transition-all duration-150 disabled:cursor-not-allowed ring-1 ring-inset focus-within:ring-2 disabled:opacity-40 pr-3 pl-3 group-has-[span[data-slot=leading]:not(:empty)]/wrapper:pl-10 group-has-[span[data-slot=trailing]:not(:empty)]/wrapper:pr-10'"
                },
                {
                    "name": "INPUT_IMPORTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[NgpInput, FormsModule, NgClass]"
                },
                {
                    "name": "LEADING_SPAN_CLASSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'peer/leading absolute inset-y-0 left-3 flex items-center empty:hidden'"
                },
                {
                    "name": "LEADING_SPAN_CLASSES_NON_INTERACTIVE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`${LEADING_SPAN_CLASSES} pointer-events-none`"
                },
                {
                    "name": "TRAILING_SPAN_CLASSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'peer/trailing absolute inset-y-0 right-3 flex items-center empty:hidden'"
                },
                {
                    "name": "TRAILING_SPAN_CLASSES_NON_INTERACTIVE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "`${TRAILING_SPAN_CLASSES} pointer-events-none`"
                },
                {
                    "name": "WRAPPER_CLASSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-constants.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'group/wrapper relative'"
                }
            ],
            "projects/design-system/components/src/input/base/input-tokens.ts": [
                {
                    "name": "LIV_INPUT_COMPONENT_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/base/input-tokens.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken(\n  'LIV_INPUT_COMPONENT_TOKEN'\n)"
                }
            ],
            "projects/design-system/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    actions: { argTypesRegex: '^on[A-Z].*' },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/i\n      }\n    }\n  },\n  decorators: [\n    applicationConfig({\n      providers: [provideAnimations(), provideTheme()]\n    })\n  ]\n}"
                }
            ],
            "projects/design-system/components/src/input/currency/currency-input.component.ts": [
                {
                    "name": "SUPPORTED_CURRENCIES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[\n  { country: 'Brazil', code: 'BRL', symbol: 'R$' },\n  { country: 'United States', code: 'USD', symbol: '$' },\n  { country: 'European Union', code: 'EUR', symbol: '€' },\n  { country: 'United Kingdom', code: 'GBP', symbol: '£' },\n  { country: 'Japan', code: 'JPY', symbol: '¥' },\n  { country: 'Argentina', code: 'ARS', symbol: '$' },\n  { country: 'Bolivia', code: 'BOB', symbol: 'Bs.' },\n  { country: 'Chile', code: 'CLP', symbol: '$' },\n  { country: 'Colombia', code: 'COP', symbol: '$' },\n  { country: 'Paraguay', code: 'PYG', symbol: '₲' },\n  { country: 'Peru', code: 'PEN', symbol: 'S/' },\n  { country: 'Uruguay', code: 'UYU', symbol: '$' },\n  { country: 'Venezuela', code: 'VES', symbol: 'Bs.' },\n  { country: 'Mexico', code: 'MXN', symbol: '$' }\n] as const"
                }
            ]
        },
        "groupedFunctions": {
            "projects/design-system/components/src/form-field/get-form-error-message.ts": [
                {
                    "name": "getFormErrorMessage",
                    "file": "projects/design-system/components/src/form-field/get-form-error-message.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fieldName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validatorName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "validatorValue",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "fieldName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validatorName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "validatorValue",
                            "type": "Record",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/design-system/components/src/input/base/base-input.ts": [
                {
                    "name": "sanitizeForDataAttr",
                    "file": "projects/design-system/components/src/input/base/base-input.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/design-system/components/src/button/button.component.ts": [
                {
                    "name": "ButtonIntent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"primary\" | \"secondary\" | \"tertiary\" | \"destructive\"",
                    "file": "projects/design-system/components/src/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "ButtonShape",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"square\" | \"rounded\" | \"pill\"",
                    "file": "projects/design-system/components/src/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "ButtonSize",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
                    "file": "projects/design-system/components/src/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "ButtonVariant",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"filled\" | \"outline\" | \"ghost\" | \"link\"",
                    "file": "projects/design-system/components/src/button/button.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                }
            ],
            "projects/design-system/components/src/button/button.component.stories.ts": [
                {
                    "name": "ButtonStory",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/design-system/components/src/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 188
                }
            ],
            "projects/design-system/components/src/icon/icon.component.ts": [
                {
                    "name": "HeroIconName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Extract<Exclude<NgIconName, template literal type | template literal type | template literal type> | template literal type>",
                    "file": "projects/design-system/components/src/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                },
                {
                    "name": "IconInput",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "IconName | ",
                    "file": "projects/design-system/components/src/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "IconName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "HeroIconName | LucideIconName",
                    "file": "projects/design-system/components/src/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "LucideIconName",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Extract<NgIconName | template literal type>",
                    "file": "projects/design-system/components/src/icon/icon.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/icon/icon.component.stories.ts": [
                {
                    "name": "IconStory",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "IconComponent",
                    "file": "projects/design-system/components/src/icon/icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/form-field/form-field.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<>",
                    "file": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "projects/design-system/components/src/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/input/count/count-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CountInputComponent>",
                    "file": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/input/currency/currency-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CurrencyInputComponent>",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/input/number/number-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NumberInputComponent>",
                    "file": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/input/password/password-input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PasswordInputComponent>",
                    "file": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 184
                }
            ],
            "projects/design-system/components/src/input/currency/currency-input.component.ts": [
                {
                    "name": "SupportedCurrency",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/design-system/components/src/input/currency/currency-input.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 200
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": []
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/design-system/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FilledVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GhostVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LinkVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OutlineVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Shapes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sizes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "StoryArgs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonIntent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonShape",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonSize",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/button/button.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "ButtonVariant",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/form-field/form-field.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/form-field/get-form-error-message.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getFormErrorMessage",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "heroIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HeroIconsShowcase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "lucideIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LucideIconsShowcase",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "IconStory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconBaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IconBaseComponentProps",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "HeroIconName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "IconInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "IconName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/icon/icon.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "LucideIconName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/base-input.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseInput",
                "coveragePercent": 0,
                "coverageCount": "0/50",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/base-input.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InputProps",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/base-input.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "sanitizeForDataAttr",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INPUT_CLASSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "INPUT_IMPORTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LEADING_SPAN_CLASSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LEADING_SPAN_CLASSES_NON_INTERACTIVE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TRAILING_SPAN_CLASSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TRAILING_SPAN_CLASSES_NON_INTERACTIVE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-constants.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WRAPPER_CLASSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/base/input-tokens.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIV_INPUT_COMPONENT_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeRange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallRange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/count/count-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CountInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/59",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "USD",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLimits",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CurrencyInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/61",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SUPPORTED_CURRENCIES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/currency/currency-input.component.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "SupportedCurrency",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Email",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Phone",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Search",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithIcons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/51",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithLimits",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/number/number-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/54",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/password/password-input.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/design-system/components/src/input/password/password-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PasswordInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/54",
                "status": "low"
            }
        ]
    }
}